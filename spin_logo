import pygame
from pygame.locals import *
from OpenGL.GL import *
from OpenGL.GLU import gluPerspective
from PIL import Image
import random
import math

# Load the logo image
logo = Image.open("/Users/cheng.chi/Ellie.JPG")
logo_data = logo.tobytes("raw", "RGBA", 0, -1)

# Load the star image
star = Image.open("/Users/cheng.chi/pixel-heart-2779422_1280.webp")
star_data = star.tobytes("raw", "RGBA", 0, -1)

# Pygame initialization
pygame.init()
display = (800, 600)
pygame.display.set_mode(display, DOUBLEBUF | OPENGL)
pygame.display.set_caption('Spinning Logo')

# OpenGL initialization
glShadeModel(GL_FLAT)
glEnable(GL_TEXTURE_2D)

# Load background music
pygame.mixer.music.load("/Users/cheng.chi/01 beside you-[AudioTrimmer.com].mp3")  # Replace "background_music.mp3" with your audio file
pygame.mixer.music.play(-1)  # Play in an infinite loop

# Load logo texture
logo_texture = glGenTextures(1)
glBindTexture(GL_TEXTURE_2D, logo_texture)
glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, logo.width, logo.height, 0, GL_RGBA, GL_UNSIGNED_BYTE, logo_data)
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR)
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR)

# Load star texture
star_texture = glGenTextures(1)
glBindTexture(GL_TEXTURE_2D, star_texture)
glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, star.width, star.height, 0, GL_RGBA, GL_UNSIGNED_BYTE, star_data)
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR)
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR)

glMatrixMode(GL_PROJECTION)
glLoadIdentity()
gluPerspective(45, (display[0] / display[1]), 0.1, 50.0)
glMatrixMode(GL_MODELVIEW)
glLoadIdentity()
glTranslatef(0.0, 0.0, -5)

# Function to draw the logo
def draw_logo():
    glBindTexture(GL_TEXTURE_2D, logo_texture)
    glBegin(GL_QUADS)
    glTexCoord2f(0, 0)
    glVertex3f(-1, -1, 0)
    glTexCoord2f(1, 0)
    glVertex3f(1, -1, 0)
    glTexCoord2f(1, 1)
    glVertex3f(1, 1, 0)
    glTexCoord2f(0, 1)
    glVertex3f(-1, 1, 0)
    glEnd()

# Function to draw a single star
def draw_star(x, y, z):
    glBindTexture(GL_TEXTURE_2D, star_texture)
    glPushMatrix()
    glTranslatef(x, y, z)
    glBegin(GL_QUADS)
    glTexCoord2f(0, 0)
    glVertex3f(-0.5, -0.5, 0)
    glTexCoord2f(1, 0)
    glVertex3f(0.5, -0.5, 0)
    glTexCoord2f(1, 1)
    glVertex3f(0.5, 0.5, 0)
    glTexCoord2f(0, 1)
    glVertex3f(-0.5, 0.5, 0)
    glEnd()
    glPopMatrix()

# Function to create stars at random positions
def create_stars(num_stars):
    stars = []
    for _ in range(num_stars):
        x = random.uniform(-2, 2)
        y = random.uniform(0, 4)
        z = random.uniform(-5, -1)
        stars.append((x, y, z))
    return stars

# Main loop
stars = create_stars(20)  # Create 20 stars initially
angle = 0
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()

    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)

    # Draw the spinning logo
    glLoadIdentity()
    glTranslatef(0.0, 0.0, -5)
    glRotatef(angle, 0, 1, 0)
    draw_logo()

    # Update and draw the stars
    for i, (x, y, z) in enumerate(stars):
        y -= 0.01  # Move stars downwards
        if y < -2:
            # If star reaches bottom, reset its position
            y = random.uniform(4, 6)
            x = random.uniform(-2, 2)
        stars[i] = (x, y, z)
        draw_star(x, y, z)

    angle += 1

    pygame.display.flip()
    pygame.time.wait(10)
